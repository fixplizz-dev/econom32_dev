# version: '3.8' - устаревший параметр, удален для совместимости

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: econom32_postgres
    environment:
      POSTGRES_DB: econom32_new
      POSTGRES_USER: econom32_user
      POSTGRES_PASSWORD: econom32_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - econom32_network
    restart: unless-stopped

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: econom32_redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - econom32_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # MinIO для хранения файлов (S3-compatible)
  minio:
    image: minio/minio:latest
    container_name: econom32_minio
    environment:
      MINIO_ROOT_USER: econom32_minio
      MINIO_ROOT_PASSWORD: econom32_minio_password
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data/minio:/data
    networks:
      - econom32_network
    restart: unless-stopped
    command: server /data --console-address ":9001"

  # ClamAV антивирус для проверки файлов
  clamav:
    image: clamav/clamav:latest
    container_name: econom32_clamav
    ports:
      - "3310:3310"
    volumes:
      - ./data/clamav:/var/lib/clamav
    networks:
      - econom32_network
    restart: unless-stopped
    environment:
      CLAMAV_NO_FRESHCLAMD: "false"

  # Nginx для reverse proxy (будет настроен позже)
  nginx:
    image: nginx:alpine
    container_name: econom32_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    networks:
      - econom32_network
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      - minio

  # Adminer для управления PostgreSQL через веб-интерфейс
  adminer:
    image: adminer:latest
    container_name: econom32_adminer
    ports:
      - "8080:8080"
    networks:
      - econom32_network
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: postgres

  # Prometheus для мониторинга
  prometheus:
    image: prom/prometheus:latest
    container_name: econom32_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
    networks:
      - econom32_network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Grafana для визуализации метрик
  grafana:
    image: grafana/grafana:latest
    container_name: econom32_grafana
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - econom32_network
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: "false"

  # Fail2Ban для защиты от брутфорса
  fail2ban:
    build:
      context: ./docker/fail2ban
      dockerfile: Dockerfile
    container_name: econom32_fail2ban
    privileged: true
    network_mode: host
    volumes:
      - ./docker/nginx/logs:/var/log/nginx:ro
      - ./data/fail2ban:/var/log/fail2ban
      - /var/log:/var/log:ro
    restart: unless-stopped
    depends_on:
      - nginx

  # cAdvisor для мониторинга Docker контейнеров
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: econom32_cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - econom32_network
    restart: unless-stopped

  # Node Exporter для системных метрик
  node-exporter:
    image: prom/node-exporter:latest
    container_name: econom32_node_exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - econom32_network
    restart: unless-stopped

  # AlertManager для уведомлений
  alertmanager:
    image: prom/alertmanager:latest
    container_name: econom32_alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./docker/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./data/alertmanager:/alertmanager
    networks:
      - econom32_network
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'

# Все данные теперь хранятся в локальных папках ./data/
# volumes: секция больше не нужна

networks:
  econom32_network:
    driver: bridge