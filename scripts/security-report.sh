#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
# –°–æ–∑–¥–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã

REPORT_DATE=$(date +%Y-%m-%d)
REPORT_DIR="./reports/security"
REPORT_FILE="$REPORT_DIR/security-report-$REPORT_DATE.html"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
mkdir -p "$REPORT_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫ –∏–∑ Prometheus
get_prometheus_metric() {
    local query="$1"
    local prometheus_url="http://localhost:9090"

    curl -s "$prometheus_url/api/v1/query?query=$query" | \
    jq -r '.data.result[0].value[1] // "0"' 2>/dev/null || echo "0"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ª–æ–≥–æ–≤
analyze_logs() {
    local log_file="$1"
    local pattern="$2"
    local description="$3"

    if [ -f "$log_file" ]; then
        local count=$(grep -c "$pattern" "$log_file" 2>/dev/null || echo "0")
        echo "<tr><td>$description</td><td>$count</td></tr>"
    else
        echo "<tr><td>$description</td><td>–õ–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω</td></tr>"
    fi
}

# –ù–∞—á–∞–ª–æ HTML –æ—Ç—á–µ—Ç–∞
cat > "$REPORT_FILE" << EOF
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–û—Ç—á–µ—Ç –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - $REPORT_DATE</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .header { background: #2563eb; color: white; padding: 20px; border-radius: 8px; }
        .section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 8px; }
        .critical { background: #fee2e2; border-color: #dc2626; }
        .warning { background: #fef3c7; border-color: #d97706; }
        .success { background: #dcfce7; border-color: #16a34a; }
        table { width: 100%; border-collapse: collapse; margin: 10px 0; }
        th, td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; }
        th { background: #f3f4f6; }
        .metric { font-size: 24px; font-weight: bold; color: #2563eb; }
    </style>
</head>
<body>
    <div class="header">
        <h1>üõ°Ô∏è –û—Ç—á–µ—Ç –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h1>
        <p>–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –ë—Ä—è–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏</p>
        <p>–î–∞—Ç–∞: $REPORT_DATE</p>
    </div>
EOF

# –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "üìä –°–±–æ—Ä –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏..."
TOTAL_REQUESTS=$(get_prometheus_metric 'sum(increase(http_requests_total[24h]))')
FAILED_LOGINS=$(get_prometheus_metric 'sum(increase(failed_login_attempts_total[24h]))')
BLOCKED_IPS=$(get_prometheus_metric 'sum(increase(fail2ban_banned_total[24h]))')
VIRUS_DETECTED=$(get_prometheus_metric 'sum(increase(clamav_virus_detected_total[24h]))')

cat >> "$REPORT_FILE" << EOF
    <div class="section">
        <h2>üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ 24 —á–∞—Å–∞</h2>
        <table>
            <tr><th>–ú–µ—Ç—Ä–∏–∫–∞</th><th>–ó–Ω–∞—á–µ–Ω–∏–µ</th></tr>
            <tr><td>–í—Å–µ–≥–æ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤</td><td class="metric">$TOTAL_REQUESTS</td></tr>
            <tr><td>–ù–µ—É–¥–∞—á–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞</td><td class="metric">$FAILED_LOGINS</td></tr>
            <tr><td>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ IP</td><td class="metric">$BLOCKED_IPS</td></tr>
            <tr><td>–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤–∏—Ä—É—Å–æ–≤</td><td class="metric">$VIRUS_DETECTED</td></tr>
        </table>
    </div>
EOF

# –ê–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
echo "üîç –ê–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
SECURITY_CLASS="success"
SECURITY_STATUS="–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ"

if [ "$VIRUS_DETECTED" -gt "0" ] || [ "$FAILED_LOGINS" -gt "50" ]; then
    SECURITY_CLASS="critical"
    SECURITY_STATUS="–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É–≥—Ä–æ–∑—ã!"
elif [ "$BLOCKED_IPS" -gt "10" ] || [ "$FAILED_LOGINS" -gt "20" ]; then
    SECURITY_CLASS="warning"
    SECURITY_STATUS="–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É–≥—Ä–æ–∑"
fi

cat >> "$REPORT_FILE" << EOF
    <div class="section $SECURITY_CLASS">
        <h2>üö® –°—Ç–∞—Ç—É—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h2>
        <p><strong>$SECURITY_STATUS</strong></p>
    </div>

    <div class="section">
        <h2>üîç –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h2>
        <table>
            <tr><th>–¢–∏–ø —Å–æ–±—ã—Ç–∏—è</th><th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th></tr>
EOF

# –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∞—Ç–∞–∫
analyze_logs "./docker/nginx/logs/access.log" "union.*select" "–ü–æ–ø—ã—Ç–∫–∏ SQL –∏–Ω—ä–µ–∫—Ü–∏–π" >> "$REPORT_FILE"
analyze_logs "./docker/nginx/logs/access.log" "<script" "–ü–æ–ø—ã—Ç–∫–∏ XSS –∞—Ç–∞–∫" >> "$REPORT_FILE"
analyze_logs "./docker/nginx/logs/access.log" "\.\./" "–ü–æ–ø—ã—Ç–∫–∏ –æ–±—Ö–æ–¥–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π" >> "$REPORT_FILE"
analyze_logs "./docker/nginx/logs/access.log" "admin" "–ü–æ–ø—ã—Ç–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∫–µ" >> "$REPORT_FILE"
analyze_logs "./docker/nginx/logs/error.log" "limiting requests" "–°—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è rate limiting" >> "$REPORT_FILE"

cat >> "$REPORT_FILE" << EOF
        </table>
    </div>
EOF

# –¢–æ–ø IP –∞–¥—Ä–µ—Å–æ–≤
echo "üåê –ê–Ω–∞–ª–∏–∑ IP –∞–¥—Ä–µ—Å–æ–≤..."
cat >> "$REPORT_FILE" << EOF
    <div class="section">
        <h2>üåê –¢–æ–ø IP –∞–¥—Ä–µ—Å–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞)</h2>
        <table>
            <tr><th>IP –∞–¥—Ä–µ—Å</th><th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤</th><th>–°—Ç–∞—Ç—É—Å</th></tr>
EOF

if [ -f "./docker/nginx/logs/access.log" ]; then
    awk '{print $1}' ./docker/nginx/logs/access.log | sort | uniq -c | sort -nr | head -10 | while read count ip; do
        status="–ù–æ—Ä–º–∞–ª—å–Ω—ã–π"
        if [ "$count" -gt "1000" ]; then
            status="‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π"
        fi
        echo "<tr><td>$ip</td><td>$count</td><td>$status</td></tr>" >> "$REPORT_FILE"
    done
fi

cat >> "$REPORT_FILE" << EOF
        </table>
    </div>
EOF

# –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
cat >> "$REPORT_FILE" << EOF
    <div class="section">
        <h2>üîß –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h2>
        <table>
            <tr><th>–°–µ—Ä–≤–∏—Å</th><th>–°—Ç–∞—Ç—É—Å</th><th>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</th></tr>
EOF

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker ps --format "table {{.Names}}\t{{.Status}}" | grep -E "(nginx|clamav|fail2ban|prometheus)" | while IFS=$'\t' read -r name status; do
    if [[ "$status" == *"Up"* ]]; then
        echo "<tr><td>$name</td><td>‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç</td><td>$status</td></tr>" >> "$REPORT_FILE"
    else
        echo "<tr><td>$name</td><td>‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</td><td>$status</td></tr>" >> "$REPORT_FILE"
    fi
done

cat >> "$REPORT_FILE" << EOF
        </table>
    </div>
EOF

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo "üí° –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π..."
cat >> "$REPORT_FILE" << EOF
    <div class="section">
        <h2>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>
        <ul>
EOF

if [ "$FAILED_LOGINS" -gt "50" ]; then
    echo "<li>‚ö†Ô∏è –í—ã—Å–æ–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å–∏–ª–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ä—ã –∑–∞—â–∏—Ç—ã.</li>" >> "$REPORT_FILE"
fi

if [ "$VIRUS_DETECTED" -gt "0" ]; then
    echo "<li>üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –≤–∏—Ä—É—Å—ã! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã.</li>" >> "$REPORT_FILE"
fi

if [ "$BLOCKED_IPS" -gt "20" ]; then
    echo "<li>üîí –ë–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP. –í–æ–∑–º–æ–∂–Ω–∞ –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∞—Ç–∞–∫–∞.</li>" >> "$REPORT_FILE"
fi

# –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
cat >> "$REPORT_FILE" << EOF
            <li>üîÑ –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã</li>
            <li>üìä –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –º–µ—Ç—Ä–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ Grafana</li>
            <li>üîê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</li>
            <li>üíæ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è</li>
        </ul>
    </div>
EOF

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
cat >> "$REPORT_FILE" << EOF
    <div class="section">
        <h2>üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã</h2>
        <p><strong>–°–ª—É–∂–±–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</strong> security@econom32.ru</p>
        <p><strong>–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</strong> admin@econom32.ru</p>
        <p><strong>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:</strong> support@econom32.ru</p>
    </div>

    <footer style="text-align: center; margin-top: 40px; color: #666;">
        <p>–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ $(date)</p>
        <p>–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –ë—Ä—è–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏</p>
    </footer>
</body>
</html>
EOF

echo "‚úÖ –û—Ç—á–µ—Ç –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω: $REPORT_FILE"

# –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ email (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
if command -v mail &> /dev/null; then
    echo "üìß –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ email..."
    mail -s "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - $REPORT_DATE" \
         -a "Content-Type: text/html" \
         admin@econom32.ru < "$REPORT_FILE"
fi

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
find "$REPORT_DIR" -name "security-report-*.html" -mtime +30 -delete

echo "üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"